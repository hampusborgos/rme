---
name: Build - Windows - CMake

on:
  workflow_dispatch:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    paths:
      - 'src/**'
      - 'source/**'
      - 'cmake/**'
      - 'CMakeLists.txt'
      - 'CMakePresets.json'
      - 'vcpkg.json'
  push:
    paths:
      - 'src/**'
      - 'source/**'
      - 'cmake/**'
      - 'CMakeLists.txt'
      - 'CMakePresets.json'
      - 'vcpkg.json'
    branches:
      - main

env:
  CMAKE_BUILD_PARALLEL_LEVEL: 2
  MAKEFLAGS: '-j 2'
jobs:
  job:
    if: ${{ github.event_name == 'push' || !github.event.pull_request.draft }}
    name: ${{ matrix.os }}-${{ matrix.buildtype }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-2022]
        buildtype: [ windows-release ]
        include:
          - os: windows-2022
            triplet: x64-windows-static
            packages: >
              sccache
    steps:
      - name: Cancel Previous Runs
        if: github.ref != 'refs/heads/main'
        uses: fkirc/skip-duplicate-actions@master
        with:
          concurrent_skipping: 'same_content'
          cancel_others: true

      - name: Checkout repository
        uses: actions/checkout@main

      - name: CCache
        uses: hendrikmuhs/ccache-action@main
        with:
          max-size: "1G"
          variant: "sccache"
          key: ccache-${{ matrix.os }}-${{ matrix.buildtype }}
          restore-keys: |
            ccache-${{ matrix.os }}

      - name: Restore artifacts and install vcpkg
        id: vcpkg-step
        run: |
          $json=Get-Content vcpkg.json -Raw | ConvertFrom-Json
          $vcpkgCommitId=$json.'builtin-baseline'
          Write-Host "vcpkg commit ID: $vcpkgCommitId"
          echo "VCPKG_GIT_COMMIT_ID=$vcpkgCommitId" | Out-File -FilePath $env:GITHUB_ENV -Append

      - name: Get vcpkg commit id from vcpkg.json
        uses: lukka/run-vcpkg@main
        with:
          vcpkgGitURL: "https://github.com/microsoft/vcpkg.git"
          vcpkgGitCommitId: ${{ env.VCPKG_GIT_COMMIT_ID }}

      - name: Get latest CMake and ninja
        uses: lukka/get-cmake@main

      - name: Run CMake
        uses: lukka/run-cmake@main
        with:
          configurePreset: ${{ matrix.buildtype }}
          buildPreset: ${{ matrix.buildtype }}

      - name: Create and Upload Artifact
        uses: actions/upload-artifact@main
        with:
          name: canary-${{ matrix.buildtype }}-${{ github.sha }}
          path: |
            ${{ github.workspace }}/*.exe
